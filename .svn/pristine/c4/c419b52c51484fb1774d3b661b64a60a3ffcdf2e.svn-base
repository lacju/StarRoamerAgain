using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Weapon : Item {

    public enum DamageType
    {
        Radiation, Heat, Kinetic, EM
    }

    public DamageType dmgType;
    public float minDamage;
    public float maxDamage;
    public float refireRate;
    public float energyCost;
    public GameObject projectileModel;

    private PlayerObjectController _POC;

    public void InitializeEquipment(float mindamage, float maxdamage, DamageType dmgtype, float refirerate, float energycost, GameObject projectilemodel, Sprite iconImg, string itemtype, string itemname, int ID, bool isequipment, string itemdescription, float basecostcredits)
    {

        minDamage = mindamage;
        maxDamage = maxdamage;
        refireRate = refirerate;
        energyCost = energycost;
        sprite = iconImg;
        itemType = itemtype;
        itemName = itemname;
        itemID = ID;
        isEquipment = isequipment;
        itemDescription = itemdescription;
        baseCostCredits = basecostcredits;
        dmgType = dmgtype;
        projectileModel = projectilemodel;
    }


    public void EquipEquipment()
    {
        _POC = GameObject.FindGameObjectWithTag("Player").GetComponent<PlayerObjectController>();

        _POC.SetWeaponMinDamage(MinDamage());
        _POC.SetWeaponMaxDamage(MaxDamage());
        _POC.SetRefireRate(RefireRate());
        _POC.SetEnergyCostShot(EnergyCost());
    }

    public void UnequipEquipment()
    {
    //switch ((int)_POC.WeaponSlotUsage())
    //{

    _POC.SetWeaponMinDamage(0);
    _POC.SetWeaponMaxDamage(0);
    _POC.SetRefireRate(3);
    _POC.SetEnergyCostShot(0);
    _POC.SetProjectileForce(0);
    _POC.SetProjectileLife(0);
            //case 1:
            //  //  _POC.UpdateWeaponSlotUsage(0);
            //    _POC.SetWeaponMinDamage(0);
            //    _POC.SetWeaponMaxDamage(0);
            //    _POC.SetRefireRate(3);
            //    _POC.SetEnergyCostShot(0);
            //    _POC.SetProjectileForce(0);
            //    _POC.SetProjectileLife(0);
            //    break;
            //case 2:
            // //   _POC.UpdateWeaponSlotUsage(1);
            //    _POC.SetWeapon2MinDamage(0);
            //    _POC.SetWeapon2MaxDamage(0);
            //    _POC.SetRefireRate2(0);
            //    _POC.SetEnergyCostShot2(0);
            //    _POC.SetProjectileForce2(0);
            //    _POC.SetProjectileLife2(0);
            //    break;
            //case 3:
            // //   _POC.UpdateWeaponSlotUsage(2);
            //    _POC.SetWeapon3MinDamage(0);
            //    _POC.SetWeapon3MaxDamage(0);
            ////    _POC.SetRefireRate3(0);
            // //   _POC.SetEnergyCostShot3(0);
            //    _POC.SetProjectileForce3(0);
            //    _POC.SetProjectileLife3(0);
            //    break;
       // }
    }

    public float MinDamage()
    {
        return minDamage;
    }

    public float MaxDamage()
    {
        return maxDamage;
    }

    public float RefireRate()
    {
        return refireRate;
    }

    public float EnergyCost()
    {
        return energyCost;
    }

}
