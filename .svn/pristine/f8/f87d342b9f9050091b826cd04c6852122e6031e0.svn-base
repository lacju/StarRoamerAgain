using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Reactor : MonoBehaviour {

    [Tooltip("Maximum power")]
    public float maxPower;
    [Tooltip("Recharge Rate (per 2 seconds)")]
    public float rechargeRate;

    private bool isEquipped = false;
    private PlayerObjectController _POC;
    private bool regenOnCoolDown = false;


    public void RemoveReactor()
    {
        _POC.SetMaxEnergy(.5f);
        _POC.SetAvailEnergy(0);
        isEquipped = false;

    }

    public void InstallReactor()
    {
        _POC = GameObject.FindGameObjectWithTag("Player").GetComponent<PlayerObjectController>();
        _POC.SetMaxEnergy(maxPower);
        _POC.SetAvailEnergy(0);
        isEquipped = true;
    }

    private void Update()
    {
        if (isEquipped && !regenOnCoolDown) 
        {
            Regenerate();
        }
    }

    private void Regenerate()
    {
        
            if (_POC.GetAvailEnergy() < _POC.GetMaxEnergy())
            {
                if (_POC.GetAvailEnergy() < 0)
                {
                    _POC.SetAvailEnergy(0);
                }
                if (_POC.GetAvailEnergy() < _POC.GetMaxEnergy())
                {
                    if ((_POC.GetMaxEnergy() - _POC.GetAvailEnergy()) < RechargeRate())
                    {
                        _POC.SetAvailEnergy(_POC.GetMaxEnergy());
                    }
                    else
                    {
                        Debug.Log("previous energy level: " + _POC.GetAvailEnergy());
                        regenOnCoolDown = true;
                        Invoke("AddEnergy", 2);
                        Debug.Log("energy after regen cycle: " + _POC.GetAvailEnergy());


                    }
                }
            }
        
    }

    public float RechargeRate()
    {
        return rechargeRate;
    }

    private void AddEnergy()
    {
        _POC.AddToCurrentEnergy(RechargeRate());
        regenOnCoolDown = false;
    }

    public class Debug
    {
        public static void Log(object obj)
        {
            UnityEngine.Debug.Log(System.DateTime.Now.ToLongTimeString() + " : " + obj);

        }
    } // time stamps debug

}
